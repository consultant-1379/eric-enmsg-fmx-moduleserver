## eric-enmsg-moduleserver image version
global:
  registry:
    url: armdocker.rnd.ericsson.se
    pullSecret:
  ingress:
    enmHost:
  timezone:
  enmProperties:
    COM_INF_LDAP_ADMIN_ACCESS:
    COM_INF_LDAP_ROOT_SUFFIX:
    COM_INF_LDAP_ADMIN_CN:
    COM_INF_LDAP_PORT:
    LDAP_ADMIN_CN:
    LDAP_ADMIN_PASSWORD:
    solrserviceport:
    web_protocols_default:
    web_ports_default:
productNumber: CXC 123 4567
productRevision: RSTATE
securityPolicy:
  rolename: fmx-moduleserver
# Number of replicas(pods) to deploy
replicas-eric-enmsg-moduleserver: 1
sidecarContainers:
  enabled: true
images:
  eric-enmsg-fmx-moduleserver:
    name: eric-enmsg-fmx-moduleserver
    tag: VERSION
  waitInitContainer:
    enabled: true
    name: eric-enm-init-container
    tag: 1.64.0-32
    command: "[ '/bin/sh', '-c', 'bash /var/tmp/check_service.sh -s fmx-rabbitmq,fmx-actionserver,eric-data-key-value-database-rd-operand']"
  eric-enm-monitoring:
    enabled: true
    name: eric-enm-monitoring-jre
    tag: 1.61.0-33
imageCredentials:
  repoPath: proj-enm
  pullPolicy: Always
  registry:
    url:
    pullSecret:
eric-enm-common-helmchart-library:
  enabled: true
## Configure the service
service:
  name: fmx-moduleserver
  sgname: fmx-moduleserver
  annotations: {}
  labels: {}
ingress:
  enabled: true
ingress_jboss_web_context:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
## Configure resource requests and limits
resources:
  requests:
    enabled: true
    memory: 409Mi
    cpu: 30m
  limits:
    enabled: true
    memory: 819Mi
    cpu: 100m
  monitoring:
    enabled: true
    requests:
      memory: 200Mi
      cpu: 50m
    limits:
      memory: 300Mi
      cpu: 200m
probes:
  container:
    startupProbe:
      enabled: true
      command: /ericsson/enm_healthcheck/bin/enm_healthcheck.py
      arguments: --exec_agents
      initialDelaySeconds: 10
      timeoutSeconds: 30
      periodSeconds: 30
      failureThreshold: 30
    livenessProbe:
      enabled: true
      command: /ericsson/enm_healthcheck/bin/enm_healthcheck.py
      arguments: --exec_agents
      initialDelaySeconds: 30
      timeoutSeconds: 30
      periodSeconds: 30
      failureThreshold: 2
    readinessProbe:
      enabled: true
      command: /ericsson/enm_healthcheck/bin/enm_healthcheck.py
      arguments: --exec_agents
      initialDelaySeconds: 10
      periodSeconds: 30
      timeoutSeconds: 30
      failureThreshold: 2
  monitoringcontainer:
    startupProbe:
      enabled: true
      command: /ericsson/enm_healthcheck/bin/enm_healthcheck.py
      arguments: --exec_agents
      initialDelaySeconds: 10
      timeoutSeconds: 30
      periodSeconds: 30
      failureThreshold: 30
    livenessProbe:
      enabled: true
      command: /ericsson/enm_healthcheck/bin/enm_healthcheck.py
      arguments: --exec_agents
      initialDelaySeconds: 30
      timeoutSeconds: 30
      periodSeconds: 30
      failureThreshold: 2
startupProbe:
  enabled: true
  command: /ericsson/enm_healthcheck/bin/enm_healthcheck.py
  arguments: --exec_agents
  initialDelaySeconds: 10
  timeoutSeconds: 30
  periodSeconds: 30
  failureThreshold: 30
# LivenessProbe Health Check configuration.
livenessProbe:
  enabled: true
  command: /ericsson/enm_healthcheck/bin/enm_healthcheck.py
  arguments: --exec_agents
  initialDelaySeconds: 30
  timeoutSeconds: 30
  periodSeconds: 30
  failureThreshold: 2
readinessProbe:
  enabled: true
  command: /ericsson/enm_healthcheck/bin/enm_healthcheck.py
  arguments: --exec_agents
  initialDelaySeconds: 10
  periodSeconds: 30
  timeoutSeconds: 30
  failureThreshold: 2
monitoring:
  enabled: true
  jmx_service_url: "service:jmx:rmi:///jndi/rmi://:9092/jmxrmi"
# Extra Annotations to be added to pod
podAnnotations: {}
## Tolerations for pod assignment
tolerations: []
## Affinity for pod assignment
affinity: requiredDuringSchedulingIgnoredDuringExecution
# Constrain which nodes your pod is eligible to be scheduled on
nodeAffinity: {}
priorityClassName: ""
## Node selector
nodeSelector: {}
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 0
## Pod Disruption Budget is an indicator of the number of disruptions that can be tolerated at a given time.
podDisruptionBudget:
  maxUnavailable: 1
podSecurityContext:
  supplementalGroups:
  - 210
  - 0
  - 206
  - 5004
securityContext:
  fmx-moduleserver:
    allowPrivilegeEscalation: false
    privileged: false
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    capabilities:
      drop:
      - ALL
  monitoring:
    allowPrivilegeEscalation: false
    privileged: false
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    capabilities:
      drop:
      - ALL
  waitInitContainer:
    allowPrivilegeEscalation: false
    privileged: false
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    capabilities:
      drop:
      - ALL
